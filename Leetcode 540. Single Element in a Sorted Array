Leetcode 540. Single Element in a Sorted Array

You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.

****Follow up: Your solution should run in O(log n) time and O(1) space.****
** for log(n) complexity we will use binary search as it splits the array into half

class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        left = 0
        right = len(nums) - 1
        
        while left < right:
            mid = (left + right)//2
            #now we check if the two halves are even or odd
            halves_even_or_odd = (right - mid)%2
            
            if nums[mid+1] == nums[mid]:
            #if the value to the right of mid value = mid value and halves are even
                if halves_even_or_odd == 0:
                    left = mid + 2
                #if the value to the right of mid value = mid value and halves are odd
                else:
                    right = mid - 1
            #if the value to the left of mid value = mid value and halves are even        
            elif nums[mid-1] == nums[mid]:
                if halves_even_or_odd == 0:
                    right = mid - 2
                #if the value to the left of mid value = mid value and halves are odd
                else:
                    left = mid + 1
            
            else: 
                return nums[mid]
        
        return nums[left]
                          
