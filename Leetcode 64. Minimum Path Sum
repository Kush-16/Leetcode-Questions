64. Minimum Path Sum

Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.

class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        if grid is None:
            return None
        m = len(grid) #calculating the length of rows
        n = len(grid[0]) #calculating the length of columns
        
        #parsing through the first row and summing up its values
        #here n (which is the column number will change while the row remains 0)
        for i in range(1,n):
            grid[0][i]+=grid[0][i-1]
            
        #parsing through the first column and summing its values
        #here m (which is the row number will change while the column remains 0)
        for j in range(1,m):
            grid[j][0]+=grid[j-1][0]
        
        #now we have to add the values which are not in the first row and first column
        for i in range(1,m):
            for j in range(1,n):
                #we either go right or down...depending on where we find the minimum value
                grid[i][j]+=min(grid[i-1][j],grid[i][j-1])                
        return grid[-1][-1]
